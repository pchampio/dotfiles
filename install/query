#!/bin/bash


BASEDIR=$(dirname $0)
. $BASEDIR/inc/functions

success "[ASK] Start"

read -p "[chsh] change shell to set zsh (you can exit here with *N*)? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo "$wherezsh" | sudo tee -a /etc/shells
  sudo chsh -s "$wherezsh"  "${USER}"
  success "[ASK] End"
  exit 0
fi
if [[ $REPLY =~ ^N$ ]]; then
  success "[ASK] Skip"
  exit 0
fi

# OR
## Fake chsh by adding executing zsh in other shells

wherezsh="$HOME/.local/bin/zsh"

read -p "Add exec '$wherezsh' to .profile (you can exit here with *N*)? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo "[ -f $wherezsh ] && [ "${JUNEST_ENV}" != "1" ] && exec $wherezsh -l" >> $HOME/.profile
fi

if [[ $REPLY =~ ^N$ ]]; then
  success "[ZSH] Skip"
  exit 0
fi

read -p "Add exec '$wherezsh' to .bash_profile ? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo "[ -f $wherezsh ] && [ "${JUNEST_ENV}" != "1" ] && exec $wherezsh -l" >> $HOME/.bash_profile
fi

read -p "Add exec '$wherezsh' to .bashrc? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo "[ -f $wherezsh ] && [ "${JUNEST_ENV}" != "1" ] && exec $wherezsh -l" >> $HOME/.bashrc
fi

read -p "Add exec '$wherezsh' to csh or tcsh (.login)? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
  echo "if ( -f $wherezsh ) exec $wherezsh -l" >> $HOME/.login
fi

success "[ASK] End"
