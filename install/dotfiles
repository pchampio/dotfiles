#!/bin/bash

BASEDIR=$(dirname $0)
. $BASEDIR/inc/functions

mkdir -p ~/lab/ || true
mkdir -p ~/.config || true


ignoreRC="README.md|.gitignore|screenshot.png|LICENSE.md|dircolors|riot.txt|.notags|vimium|package.list|package_all.list|logouser.txt|settings_dataGrip.jar|LSP_settings.json|urlview|settings_idea.jar|keyd.conf|watchman.json"
dir="$HOME/dotfiles"

explain "Create symlink for files config"
[ -d ~/.config/ ] || mkdir ~/.config/
tell cp -f --recursive --symbolic-link $dir/config/* ~/.config

explain "Symlink nvim config"
\rm -rf ~/.config/nvim 2> /dev/null || true
tell ln -sf $dir/nvim ~/.config/nvim

explain "Create symlink for dotfiles"
# change to the dotfiles directory
pushd $dir >/dev/null 2>&1

files=$(find . -maxdepth 1 -type f | sed 's|./||' | grep -E -v $ignoreRC)

# create symlinks from the homedir to any files in the ~/dotfiles directory specified
for file in $files; do
  if [ -f ~/.$file ]; then
    rm ~/.$file
  fi
  tell ln -s $dir/$file ~/.$file
done

explain "SSH Config (always overwritten)"
mkdir -p ~/.ssh/sockets/
touch "$HOME"/.ssh/config
if ! grep -q "AddKeysToAgent yes" ~/.ssh/config; then
  explain "Conf ssh config"
  chmod +w "$HOME"/.ssh/config
  cat <<EOF >>"$HOME"/.ssh/config
Host *
  #!! TsshdPath ~/.local/bin/tsshd
  #!! # UdpMode yes
  #!! # UdpMode KCP

  #!! EnableOSC52 Yes

  AddKeysToAgent yes
  ForwardAgent yes

  GSSAPIAuthentication no

  ControlMaster auto
  ControlPath ~/.ssh/sockets/%r@%h-%p
  ControlPersist 600

  IPQoS throughput
EOF
chmod 600 "$HOME"/.ssh/config
fi

if ! grep -q "PromptThemeLayout" "$HOME/.tssh.conf" 2>/dev/null; then
    echo 'PromptThemeLayout = tiny' >> "$HOME/.tssh.conf"
fi

# Custom Completion Scripts
mkdir -p ~/.oh-my-zsh/custom/completions

$HOME/.local/bin/atuin gen-completions --shell zsh > ~/.oh-my-zsh/custom/completions/_atuin
$HOME/.local/bin/rbw gen-completions zsh > ~/.oh-my-zsh/custom/completions/_rbw # doesn't work IDK


# switch this remote git from http to ssh if needed
url=$(git remote get-url origin)
ssh_url="${url#https://github.com/}"

if [[ "$ssh_url" != "$url" ]]; then
    # Remove trailing slash if any
    ssh_url="${ssh_url%/}"
    # Build SSH URL
    ssh_url="git@github.com:${ssh_url}"

    explain "Switching dotfile git remote from https to $ssh_url"
    git remote set-url origin "$ssh_url"
    git config pull.rebase false # small config
fi

success "[DOTFILES] Success"
