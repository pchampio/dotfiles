#!/bin/bash


BASEDIR=$(dirname $0)
. $BASEDIR/inc/functions

rm -rf ~/.oh-my-zsh/
touch ~/.zsh_history

explain "Installation de oh-my-zsh"
  export KEEP_ZSHRC='yes'
  export echo exit | sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
  if [ -f ~/.zsh-update ]; then
    sudo chown $USER ~/.zsh-update
  fi

explain "Installation de instant-zsh"
  curl -fsSL -o ~/.config/instant-zsh.zsh https://gist.github.com/romkatv/8b318a610dc302bdbe1487bb1847ad99/raw

explain "Installation de zsh-syntax-highlighting"
  tell git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/syntax_highlighting

  # tell wget https://raw.githubusercontent.com/zdharma/fast-syntax-highlighting/master/fast-syntax-highlighting.plugin.zsh -O ~/.oh-my-zsh/custom/fast-syntax-highlighting.plugin.zsh
  # tell wget https://raw.githubusercontent.com/zdharma/fast-syntax-highlighting/master/fast-highlight -O ~/.oh-my-zsh/custom/fast-highlight

explain "Installation zsh-autosuggestions"
  tell git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/zsh-autosuggestions

explain "Installation de zsh-completions"
  tell git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/zsh-completions

explain "Installation de zsh-autoquoter"
 tell git clone https://github.com/ianthehenry/zsh-autoquoter ~/.oh-my-zsh/custom/plugins/zsh-autoquoter
 
# Remove group/other write permissions to make oh-my-zsh happy
chmod -R go-w ~/.oh-my-zsh 2> /dev/null || true
chmod -R go-w ~/.zshrc ~/.zsh* ~/.zcompdump* ~/.zsh-completions 2> /dev/null || true

# explain "Installation de git-worktree-switcher"
#  tell curl https://raw.githubusercontent.com/yankeexe/git-worktree-switcher/master/wt > ~/dotfiles/bin/wt
#  chmod +x ~/dotfiles/bin/wt
#  mkdir -p ~/.oh-my-zsh/completions/
#  curl https://raw.githubusercontent.com/yankeexe/git-worktree-switcher/master/completions/_wt_completion > ~/.oh-my-zsh/completions/_wt

wherezsh="$(command -v zsh)"

read -p "Local install of zsh? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  explain "Installation de zsh-bin"
  rm -rf /tmp/zsh-bin
  mkdir /tmp/zsh-bin
  wget -O /tmp/zsh-bin/install https://raw.githubusercontent.com/romkatv/zsh-bin/master/install
  sh /tmp/zsh-bin/install -d ~/dotfiles -e no
  wherezsh=$HOME/dotfiles/bin/zsh
fi


$wherezsh -c "zcompile $HOME/.config/instant-zsh.zsh"


read -p "Add exec zsh to .profile (you can exit here too)? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  echo "[ -f $wherezsh ] && [ "${JUNEST_ENV}" != "1" ] && exec $wherezsh -l" >> $HOME/.profile
fi

read -p "Add exec zsh to .bash_profile ? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  echo "[ -f $wherezsh ] && [ "${JUNEST_ENV}" != "1" ] && exec $wherezsh -l" >> $HOME/.bash_profile
fi

read -p "Add exec zsh to .bashrc? [y] " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  echo "[ -f $wherezsh ] && [ "${JUNEST_ENV}" != "1" ] && exec $wherezsh -l" >> $HOME/.bashrc
fi

read -p "Add exec zsh to csh or tcsh (.login)? " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
  echo "if ( -f $wherezsh ) exec $wherezsh -l" >> $HOME/.login
fi

read -p "chsh to zsh? " -n 1 -r
echo ""    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
	command -v zsh | sudo tee -a /etc/shells
	sudo chsh -s "$wherezsh"  "${USER}"
fi

[ ! -d ~/.local/bin/ ] && mkdir ~/.local/bin/
[ ! -f ~/.local/bin/zsh ] && \rm ~/.local/bin/zsh
if [[ -f $wherezsh ]]
then
  tell ln -s $wherezsh ~/.local/bin/zsh || true
else
  tell ln -s "$(command -v zsh)" ~/.local/bin/zsh || true
fi

success "Success"
