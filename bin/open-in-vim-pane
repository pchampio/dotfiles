#!/usr/bin/env perl
#
# FROM : https://github.com/jyn514/dotfiles/blob/45f6702de2608a972615cd877993a41521f76348/bin/hx-hax

use strict;
use warnings;

use Cwd 'abs_path';
use File::Basename 'basename', 'dirname';
use URI ();

my $editor = $ENV{EDITOR} || 'nvim';
# `.*?`: match anything, non-greedily
# `(?::)`: match a `:` without capturing it
my $line = qr/(.*?)(?::([0-9]+))?(?::([0-9]+))?$/;

sub cmdexists {
  `sh -c "command -v $_[0]"`
}

sub split_line {
  my @matches = $_[0] =~ $line;
  my $url = URI->new($matches[0]);
  if (defined $url->scheme && $url->scheme eq 'file' && $url->path ne $matches[0]) {
    @matches[0] = $url-> path;
  }
  my $abs = abs_path $matches[0];
  $matches[0] = $abs if defined $abs;
  grep defined, @matches
}

sub join_line {
  return $_[0] if @_ < 2;
  my ($file, $line, $column) = @_;
  return ("+normal!${line}G${column}|", $file) if $editor eq 'nvim';
  $column = @_ > 2 ? ":$column" : '';
  return ($file, "+$line$column") if $editor eq 'kak';
  "$file:$line$column"
}

sub trim {
# https://stackoverflow.com/a/4597964/7669110
  return if (! scalar @_);
  $_[0] =~ s/^\s+|\s+$//rg
}

sub hxhax {
  my @args = @_;
  my $current_window= trim `tmux display-message -p "#{window_id}"`;
  my $cmd = ";vsp";
  my $pane = trim `tmux list-panes -a \\
	     -f '#{&&:#{==:#{window_id},$current_window},#{==:#{pane_current_command},nvim}}' \\
	     -F '#{pane_id}'`;
  unless (defined $pane) {
# don't use `` so that args can have embedded pipes
    my @split = ('tmux', 'split-window', '-h', '-P', '-F', '"#{pane_id}"', $editor, @args);
    open(my $fd, '-|', @split) || die "can't open pipeline: $!";
    $pane = <$fd>;
    $cmd = ";e";
  }
  $pane = trim `tmux list-panes -a \\
	  -f '#{&&:#{==:#{window_id},$current_window},#{==:#{pane_current_command},nvim}}' \\
	  -F '#{pane_id}'`;
# exit copy mode so we don't send these commands directly to tmux
  `tmux send-keys -t $pane -X cancel 2>/dev/null`;
# Escape for some reason doesn't get sent as the escape key if it shows up next to any other keys???
  `tmux send-keys -t $pane Escape`;
  my $args = join ' ', @args;
  my @split = split_line $args;
  my $file = $split[0];
  my $line = $split[1];
  `tmux send-keys -t $pane "$cmd +$line $file" Enter`;
  `tmux select-pane -t $pane -Z`;
}

sub xdgopen {
  my $target = $_[0];
  if ($target =~ /:/) {
    my @split = split_line $target;
    my $file = $split[0];
    hxhax join_line @split;
    return
  }
  hxhax "$target:1";
}

my $name = basename $0;
exec ($editor, join_line split_line $ARGV[0]) if 'editor-hax' eq basename $0;
if ('hx-hax' eq basename $0) {
  hxhax(@ARGV ? join_line split_line $ARGV[0] : '');
  exit;
}

@ARGV or print 'usage: $0 <file>' && exit 1;
xdgopen $ARGV[0];
